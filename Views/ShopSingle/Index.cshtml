@model ProdutoView

@{
    ViewBreadcrumbs breadcrumbs = new();
    breadcrumbs.Title = "Produto";
    breadcrumbs.Breadcrumbs = new BreadcrumbsDTO[]{
        new BreadcrumbsDTO("In√≠cio", "/", "fa-solid fa-house"),
        new BreadcrumbsDTO("Produtos", "../"),
        new BreadcrumbsDTO("Detalhes")
    };

    ViewData["Title"] = breadcrumbs.Title;
}

@(await Component.InvokeAsync<BreadcrumbsViewComponent>(breadcrumbs))

<div class="max-w-[1030px] mx-auto my-10 flex gap-5 justify-center">

    <div class="w-5/12 bg-white p-6 rounded-lg shadow">
        <img src='@Model.Imagens.Where((Item) => (Item.NomeImagem == "COVER")).FirstOrDefault().ImageSource' alt=""
             class="w-full mb-4 rounded">
        <div class="flex -mx-2">
            @foreach (var Imagem in Model.Imagens.Where((Item) => (Item.NomeImagem != "COVER")))
            {
                <img src="@Imagem.ImageSource" class="w-1/4 px-2 rounded" alt="...">
            }
        </div>
    </div>

    <div class="w-6/12 bg-white p-6 rounded-lg shadow">
        <form asp-controller="Checkout" asp-action="Index" asp-route-rota="produtos" method="GET">
        <div class="flex flex-wrap justify-between items-center mb-2">
            <p class="text-gray-600 w-full">
                @Model.Produto.Subcategoria, @Model.Produto.TipoProduto,
                @Model.Produto.Cor, @Model.Produto.Marca
            </p>
            <div class="flex gap-4 justify-between items-center w-full">
                <h1 class="text-2xl font-bold w-full">@Model.Produto.Nome.Capitalize()</h1>
                <button type="button" class="text-primary text-2xl" data-action="favoritos" data-id-produto="@Model.Produto.IdProduto">
                    <i class="fa-regular fa-heart"></i>
                </button>
            </div>
        </div>

        <div class="flex items-center mb-4">
            <div class="text-yellow-500 text-base mr-2 flex gap-2">
                @for (var i = 0; i < 5; i++)
                {
                    if (i <= Model.Produto.Nota)
                    {<i class="fa-solid fa-star"></i>
                    }
                    else
                    {
                        <i class="fa-light fa-star"></i>
                    }
                }
            </div>
            <span class="text-gray-600 leading-none text-base">@Model.Produto.QntAvaliacoes Review(s)</span>
        </div>

        <p class="text-purple-800 mb-4 font-bold text-3xl">
            @if (Model.Produto.Desconto)
            {
                @Model.Produto.CalculoDesconto.ToString("C")
                <span class="block line-through text-gray-500 text-lg font-semibold">
                    @Model.Produto.Preco.ToString("C")
                </span>
            }
            else
            {
                @Model.Produto.Preco.ToString("C")
            }
        </p>
        <p class="text-gray-700 mb-4">
            @Model.Produto.Descricao
        </p>


        <p class="text-gray-700 mb-4">Quantidade disponivel em estoque: @Model.Produto.Saldo</p>
        <div class="mb-4">
            <input type="hidden" value="@Model.Produto.IdProduto" name="produtos[0].idProduto">

            <div class="count-input flex w-fit">
                <button type="button" class="button-qnt" data-operador="menos"><i class="fa-solid fa-minus"></i></button>
                <input autocomplete="off" type="text" value="1" name="produtos[0].qntCompra"
                       class="input-qnt !w-[65px] !mx-2" />
                <button type="button" class="button-qnt" data-operador="mais"><i class="fa-solid fa-plus"></i></button>
            </div>
        </div>
        <button type="submit" class="w-full btn bg-purple-700 hover:bg-purple-800 text-white mb-2">Comprar</button>
        <button type="button" data-action="carrinho" class="w-full btn btn-warning">Adicionar ao Carrinho <i class="fa-solid fa-cart-shopping"></i></button>
        </form>
</div>

</div>

<div class="max-w-[1250px] mx-auto">
    @(await Component.InvokeAsync<ProductListViewComponent>())
    @(await Component.InvokeAsync<KeepShoppingViewComponent>())
    @(await Component.InvokeAsync<KeepShoppingInfoViewComponent>())
</div>